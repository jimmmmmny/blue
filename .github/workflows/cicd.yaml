name: cicd-1
on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [dev]
    paths:
    - 'my-app/**'

jobs:
  test:
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    steps:
    - name: checkout the code
      uses: actions/checkout@v4

  image-build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: checkout the code
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      id: credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'
    - name: Build and push main-nginx image
      run: |
        cd my-app/main-nginx
        docker build -t ${{ secrets.REGISTRY }}/${{ vars.MAIN_NGINX_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY }}/${{ vars.MAIN_NGINX_REPOSITORY }}:${{ github.sha }}
    - name: Build and push main-tomcat image
      run: |
        cd my-app/main-tomcat
        docker build -t ${{ secrets.REGISTRY }}/${{ vars.MAIN_TOMCAT_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY }}/${{ vars.MAIN_TOMCAT_REPOSITORY }}:${{ github.sha }}
    - name: Build and push item-nginx image
      run: |
        cd my-app/item-nginx
        docker build -t ${{ secrets.REGISTRY }}/${{ vars.ITEM_NGINX_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY }}/${{ vars.ITEM_NGINX_REPOSITORY }}:${{ github.sha }}
    - name: Build and push item-tomcat image
      run: |
        cd my-app/item-tomcat
        docker build -t ${{ secrets.REGISTRY }}/${{ vars.ITEM_TOMCAT_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY }}/${{ vars.ITEM_TOMCAT_REPOSITORY }}:${{ github.sha }}
    - name: Build and push cart-nginx image
      run: |
        cd my-app/cart-nginx
        docker build -t ${{ secrets.REGISTRY }}/${{ vars.CART_NGINX_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY }}/${{ vars.CART_NGINX_REPOSITORY }}:${{ github.sha }}
    - name: Build and push cart-tomcat image
      run: |
        cd my-app/cart-tomcat
        docker build -t ${{ secrets.REGISTRY }}/${{ vars.CART_TOMCAT_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ secrets.REGISTRY }}/${{ vars.CART_TOMCAT_REPOSITORY }}:${{ github.sha }}
        
  
  deploy:
    runs-on: ubuntu-latest
    needs: [ image-build ]
    permissions:
      id-token: write
      contents: read
    steps:
    - name: checkout the code
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      id: credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
    - name: setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: latest
    - name: setup helm
      uses: azure/setup-helm@v3
      with:
        version: v3.11.1
    - name: access kubernetes
      run: |
        aws eks update-kubeconfig --name ${{ vars.CLUSTER_NAME }}
    - name: main-nginx deploy
      run: |
        helm upgrade main-web kubernetes/main-nginx --create-namespace --namespace frontend \
        --set image.tag=${{ github.sha }} \
        --set image.repository=${{ secrets.REGISTRY }}/${{ vars.MAIN_NGINX_REPOSITORY }}
    - name: main-tomcat deploy
      run: |
        helm upgrade main-was kubernetes/main-tomcat --create-namespace --namespace backend \
        --set image.tag=${{ github.sha }} \
        --set image.repository=${{ secrets.REGISTRY }}/${{ vars.MAIN_TOMCAT_REPOSITORY }}
    - name: item-nginx deploy
      run: |
        helm upgrade item-web kubernetes/item-nginx --create-namespace --namespace frontend \
        --set image.tag=${{ github.sha }} \
        --set image.repository=${{ secrets.REGISTRY }}/${{ vars.ITEM_NGINX_REPOSITORY }}
    - name: item-tomcat deploy
      run: |
        helm upgrade item-was kubernetes/item-tomcat --create-namespace --namespace backend \
        --set image.tag=${{ github.sha }} \
        --set image.repository=${{ secrets.REGISTRY }}/${{ vars.ITEM_TOMCAT_REPOSITORY }}
    - name: cart-nginx deploy
      run: |
        helm upgrade --install cart-web kubernetes/cart-nginx --create-namespace --namespace frontend \
        --set image.tag=${{ github.sha }} \
        --set image.repository=${{ secrets.REGISTRY }}/${{ vars.CART_NGINX_REPOSITORY }}
    - name: cart-tomcat deploy
      run: |
        helm upgrade --install cart-was kubernetes/cart-tomcat --create-namespace --namespace backend \
        --set image.tag=${{ github.sha }} \
        --set image.repository=${{ secrets.REGISTRY }}/${{ vars.CART_TOMCAT_REPOSITORY }}


        



        

  
